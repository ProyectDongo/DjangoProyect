"""
Django settings for DjangoProyect project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv  # Importa para cargar .env

# Carga las variables de entorno desde .env
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mofu&_@&dxk5cxtc+-h$w%qqyre=&(uite+-uzr0mxn$$bu998'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['.ngrok-free.app', 'localhost', '127.0.0.1']

CSRF_TRUSTED_ORIGINS = ['https://*.ngrok-free.app']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'ejercicios',
    'entrenamiento',
    'evaluacion',
    'harware',
    'nutricion',
    'storages', 
    

]





MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoProyect.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoProyect.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

#DATABASES = {
#       'ENGINE': 'django.db.backends.mysql',
      #  'NAME': 'proyectt',
      #  'USER': 'root',
     #   'PASSWORD': '',
    #    'HOST': 'localhost',
   #     'PORT': '3306',
  #      'OPTIONS': {
 #           'init_command': 'SET default_storage_engine=INNODB',
 #       }
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',   # archivo de DB en la raíz del proyecto
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR,'static')]

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Puedes mantener esto como fallback para desarrollo local, pero con STORAGES no se usará para uploads a Cloudinary.
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'core.User'


LOGOUT_REDIRECT_URL = "login/"
# Indica que la página de login está en la raíz('/')
LOGIN_URL = 'login/'


# Configuración de sesiones
SESSION_COOKIE_AGE = 3600  # Sesiones expiran en 1 hora
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Sesiones cierran al cerrar el navegador




# Backblaze B2 Storage Configuration

# Cargar credenciales desde .env
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')  # 0053b1747bdf37d0000000003
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')  # tu applicationKey real
AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')  # flametraining
AWS_S3_ENDPOINT_URL = os.getenv('AWS_S3_ENDPOINT_URL')  # https://s3.us-east-005.backblazeb2.com
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.us-east-005.backblazeb2.com'  # flametraining.s3.us-east-005.backblazeb2.com
AWS_DEFAULT_ACL = 'public-read'  # Hace los archivos públicos por default (coincide con tu bucket público)
AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}  # Caché para optimización
AWS_S3_FILE_OVERWRITE = False  # Evita sobrescribir archivos existentes

# Usa B2 como almacenamiento predeterminado para media (videos)
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'  # https://flametraining.s3.us-east-005.backblazeb2.com/